AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    MemorySize: 256
    Environment:
      Variables:
        GAME_TABLE_NAME: !Ref GameTable
        PLAYER_TABLE_NAME: !Ref PlayersTable
        QUESTIONS_TABLE_NAME: !Ref QuestionsTable
        CURRENT_QUESTION_TABLE_NAME: !Ref CurrentQuestionTable
        BETS_TABLE_NAME: !Ref BetsTable
  Api:
    Cors: "'www.vernon-engle.info'"

Resources:
  GameTable:
    Type: AWS::Serverless::SimpleTable
  PlayersTable:
    Type: AWS::Serverless::SimpleTable
  CurrentQuestionTable:
    Type: AWS::Serverless::SimpleTable
  QuestionsTable:
    Type: AWS::Serverless::SimpleTable
  BetsTable:
    Type: AWS::Serverless::SimpleTable
  WitsAndWagersSubmitAnswerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: WitsAndWagersFunction
      Handler: witsandwagers.SubmitAnswer::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: GameTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: PlayersTable
      Events:
        SubmitAnswer:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /witsandwagers/answer
            Method: post
  WitsAndWagersShowAnswersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: WitsAndWagersFunction
      Handler: witsandwagers.ShowAnswers::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: GameTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: PlayersTable
      Events:
        ShowPlayerAnswers:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /witsandwagers/showanswers
            Method: get
  WitsAndWagersShowQuestionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: WitsAndWagersFunction
      Handler: witsandwagers.ShowQuestion::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: QuestionsTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: CurrentQuestionTable
      Events:
        ShowQuestion:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /witsandwagers/showquestion
            Method: get
  WitsAndWagersArrangeAnswersFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: WitsAndWagersFunction
      Handler: witsandwagers.ArrangeAnswers::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: GameTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: CurrentQuestionTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: PlayersTable
      Events:
        ShowQuestion:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /witsandwagers/arrangeanswers
            Method: get
  WitsAndWagersPlaceBetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: WitsAndWagersFunction
      Handler: witsandwagers.PlaceBet::handleRequest
      Runtime: java8
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: BetsTable
        - DynamoDBCrudPolicy:
            TableName:
              Ref: CurrentQuestionTable
      Events:
        ShowQuestion:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /witsandwagers/bet
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WitsAndWagersApi:
    Description: "API Gateway endpoint URL for Prod stage for Wits and Wagers function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  WitsAndWagersSubmitAnswerFunction:
    Description: "Submit Answer Lambda Function ARN"
    Value: !GetAtt WitsAndWagersSubmitAnswerFunction.Arn
  WitsAndWagersShowAnswersFunction:
    Description: "Show Answer Lambda Function ARN"
    Value: !GetAtt WitsAndWagersShowAnswersFunction.Arn
  WitsAndWagersSubmitAnswerFunctionIamRole:
    Description: "Implicit IAM Role created for WitsAndWagersSubmitAnswerFunction"
    Value: !GetAtt WitsAndWagersSubmitAnswerFunctionRole.Arn
  WitsAndWagersShowAnswersFunctionIamRole:
    Description: "Implicit IAM Role created for WitsAndWagersShowAnswersFunction"
    Value: !GetAtt WitsAndWagersShowAnswersFunctionRole.Arn
  WitsAndWagersShowQuestionFunctionIamRole:
    Description: "Implicit IAM Role created for WitsAndWagersShowQuestionFunction"
    Value: !GetAtt WitsAndWagersShowQuestionFunctionRole.Arn